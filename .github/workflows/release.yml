name: Release

on:
  push:
    tags:
      - '*'

jobs:

  release:
    # using https://github.com/marketplace/actions/changelog-reader
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v1
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.log_entry }}
          draft: false
          prerelease: false

  build:
    name: Publish for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [linux, windows, macos]
        include:
          - name: linux
            os: ubuntu-latest
            deps: sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libdbus-1-dev
            archive_name: passage.tar.gz
            asset_suffix: x86_64-linux.tar.gz

          - name: windows
            os: windows-latest
            archive_name: passage.zip
            asset_suffix: x86_64-windows.zip

          - name: macos
            os: macos-latest
            archive_name: passage.tar.gz
            asset_suffix: x86_64-darwin.tar.gz

    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install linux build dependencies
        run: ${{ matrix.deps }}
        if: matrix.deps != ''

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --release --locked ${{ matrix.build_flags }}

      - name: Create archive
        run: |
          mkdir -p release/passage
          mv target/${{ matrix.target }}/release/passage* release/passage/
          rm release/passage/*.d
          tar czf ${{ matrix.archive_name }} -C release/ passage/
        if: matrix.name != 'windows'

      - name: Create archive [Windows]
        run: |
          mkdir -p release/passage
          mv target/release/passage.exe release/passage/
          cd release/
          7z.exe a ../${{ matrix.archive_name }} passage/
        shell: bash
        if: matrix.name == 'windows'

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        shell: bash

      - name: Upload archive to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.archive_name }}
          asset_name: passage-${{ steps.get_version.outputs.VERSION }}-${{ matrix.asset_suffix }}
          tag: ${{ github.ref }}

  deb:
    name: Debian ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [linux]
        include:
          - name: linux
            target: x86_64-unknown-linux-gnu
            deps: sudo apt-get install -y libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libdbus-1-dev

    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: cargo install cargo-deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: Install build dependencies
        run: ${{ matrix.deps }}
        if: matrix.deps != ''

      - name: cargo deb
        uses: actions-rs/cargo@v1
        with:
          command: deb

      - name: Upload Debian package to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/debian/*.deb
          tag: ${{ github.ref }}
          file_glob: true
